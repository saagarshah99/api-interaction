{"version":3,"sources":["components/Kanye/Kanye.jsx","components/Pokemon/Pokemon.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Kanye","heading","useState","yeQuote","setYeQuote","getYeQuote","fetch","then","response","json","jsonResponse","quote","catch","error","console","log","useEffect","className","onClick","Pokemon","types","type","name","sprites","back_default","pokemon","setPokemon","Math","floor","random","searchQuery","setSearchQuery","getPokemon","event","preventDefault","err","img","capitaliseFirstLetter","str","charAt","toUpperCase","slice","onSubmit","onInput","target","value","toLowerCase","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA2BeA,EAxBD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGb,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAa,WACfC,MAAM,2BACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAY,OAAIN,EAAWM,EAAaC,UAC7CC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAKpC,OAFAG,qBAAU,WAAOX,MAAe,IAG5B,0BAASY,UAAU,QAAnB,UACI,oBAAIA,UAAU,iBAAd,SAAgChB,IAEhC,wBAAQgB,UAAU,cAAcC,QAASb,EAAzC,0BAEA,oBAAGY,UAAU,eAAb,cAA8Bd,GAAoB,GAAlD,WCwCGgB,G,MA3DC,SAAC,GAAiB,IAAflB,EAAc,EAAdA,QAGf,EAA8BC,mBAAS,CACnCkB,MAAO,CAAC,CAACC,KAAM,CAACC,KAAM,MACtBC,QAAS,CAACC,aAAc,MAF5B,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,EAAsCxB,mBAASyB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAAjF,mBAAOC,EAAP,KAAoBC,EAApB,KAIMC,EAAa,SAACC,GACbA,GAAOA,EAAMC,iBAEhB,IACOJ,GACCxB,MAAM,qCAAD,OAAsCwB,IACtCvB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAgBgB,EAAWhB,MAChCE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAGxC,MAAMsB,GAAMrB,QAAQD,MAAMsB,KAG9BnB,qBAAU,WAAOgB,OAEjB,IAKyBI,EADDf,EADAC,EAHlBe,EAAwB,SAACC,GAAD,OAASA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,IAO/E,OACI,0BAASxB,UAAU,UAAnB,UACI,oBAAIA,UAAU,mBAAd,SAAkChB,IAElC,uBAAMgB,UAAU,gBAAgByB,SAAUV,EAA1C,UACI,uBAAOX,KAAK,OAAOJ,UAAU,sBAAsB0B,QA/B3C,SAACV,GAAD,OAAWF,EAAeE,EAAMW,OAAOC,MAAMC,kBAgCrD,uBAAOzB,KAAK,SAASJ,UAAU,qBAAqB4B,MAAM,cAG9D,sBAAK5B,UAAU,kBAAf,UACI,0BAASA,UAAU,uBAAnB,UACI,6BAfQK,EAeWG,EAAQH,KAfVA,EAAO,SAAWe,EAAsBf,GAAQ,MAgBjE,6BAfQD,EAeWI,EAAQL,MAAM,GAAGC,KAAKC,KAfxBD,EAAO,SAAWgB,EAAsBhB,GAAQ,SAkBrE,yBAASJ,UAAU,sBAAnB,SACI,qBAAK8B,KAlBIX,EAkBiBX,EAAQF,QAAQC,aAlBzBY,GAAY,IAkB4BY,IAAK,eClCnEC,EAjBH,WACV,OACE,sBAAKhC,UAAU,MAAf,UACE,kDAEA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAOhB,QAAQ,kBAIf,cAAC,EAAD,CAASA,QAAQ,sBCFViD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9394d05b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Kanye.scss\";\n\nconst Kanye = ({ heading }) => {\n\n    // fetch random quote from kanye api, updating state\n    const [yeQuote, setYeQuote] = useState(\"\");\n    const getYeQuote = () => {\n        fetch(\"https://api.kanye.rest/\")\n            .then(response => response.json())\n            .then(jsonResponse => setYeQuote(jsonResponse.quote))\n            .catch(error => console.log(error));\n    }\n\n    useEffect(() => {getYeQuote()}, []); //invoke on page load, avoiding infinite loop\n\n    return (\n        <section className=\"kanye\">\n            <h2 className=\"kanye__heading\">{heading}</h2>\n\n            <button className=\"kanye___btn\" onClick={getYeQuote}>Get Some Ye!</button>\n\n            <p className=\"kanye__quote\">\"{yeQuote ? yeQuote : \"\"}\"</p>\n        </section>\n    )\n}\n\nexport default Kanye\n","import React, {useState, useEffect} from 'react';\nimport \"./Pokemon.scss\";\n\nconst Pokemon = ({ heading }) => {\n\n    // defining state with \"empty\" object to begin with\n    const [pokemon, setPokemon] = useState({\n        types: [{type: {name: \"\"}}], \n        sprites: {back_default: \"\"}\n    });\n\n    // loading input in search value, randomly generate one by default\n    const [searchQuery, setSearchQuery] = useState(Math.floor(Math.random() * 800) + 1)\n    const handleInput = (event) => setSearchQuery(event.target.value.toLowerCase());\n\n    // fetching data from pokemon api in json response if found\n    const getPokemon = (event) => {\n        if(event) event.preventDefault();\n\n        try {\n            if(searchQuery) {\n                fetch(`https://pokeapi.co/api/v2/pokemon/${searchQuery}`)\n                    .then(response => response.json())\n                    .then(jsonResponse =>{setPokemon(jsonResponse)})\n                    .catch(error => console.log(error))\n            }\n        }\n        catch(err) {console.error(err);}\n\n    }\n    useEffect(() => {getPokemon()});\n\n    const capitaliseFirstLetter = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n    \n    // return name, type or image if found from api\n    const getPokemonName = (name) => name ? \"Name: \" + capitaliseFirstLetter(name) : \"\";\n    const getPokemonType = (type) => type ? \"Type: \" + capitaliseFirstLetter(type) : \"\";\n    const getPokemonImage = (img) => img ? img : \"\";\n\n    return (\n        <section className=\"pokemon\">\n            <h2 className=\"pokemon__heading\">{heading}</h2>\n\n            <form className=\"pokemon__form\" onSubmit={getPokemon}>\n                <input type=\"text\" className=\"pokemon_search-text\" onInput={handleInput} />\n                <input type=\"submit\" className=\"pokemon_search-btn\" value=\"Search\" />\n            </form>\n\n            <div className=\"pokemon__output\">\n                <section className=\"pokemon__output-text\">\n                    <p>{getPokemonName(pokemon.name)}</p>\n                    <p>{getPokemonType(pokemon.types[0].type.name)}</p>\n                </section>\n\n                <section className=\"pokemon__output-img\">\n                    <img src={getPokemonImage(pokemon.sprites.back_default)} alt={\"\"} />\n                </section>\n            </div>\n        </section>\n    )\n}\n\nexport default Pokemon\n","import './App.scss';\nimport Kanye from \"./components/Kanye/Kanye\";\nimport Pokemon from \"./components/Pokemon/Pokemon\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>API Interactions</h1>\n\n      <div className=\"api\">\n        <Kanye heading=\"1) Kanye West\" />\n\n        {/* <hr /> */}\n\n        <Pokemon heading=\"2) Pokemon\" />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}